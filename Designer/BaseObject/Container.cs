//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

///    @Description A Container describes a discrete unit of work or a discrete quantity of material (i.e., batch of material, a serialized component or serialized piece of material, a uniquely identified package or vessel that contains product, etc.)  A Container can include quantity information (weight, count, etc.) directly, or it can include a grouping of other containers (child containers).
///    @author lichong
///    @date 2024/3/24
///
namespace CamstarClient.Entity {
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    using CamstarClient.Enum;
    
    [Table("CONTAINER")]
    public class Container : BaseObject {
        public virtual StartReason StartReason {
            get; set;
        }
        [Column("STATUS")]
        public ContainerStatusEnum Status {
            get; set;
        }
        public virtual MfgOrder MfgOrder {
            get; set;
        }
        public virtual Customer Customer {
            get; set;
        }
        public virtual Product Product {
            get; set;
        }
        [Column("CONTAINERNAME")]
        public string Name {
            get; set;
        }
        public virtual ContainerLevel Level {
            get; set;
        }
        public virtual Container SplitFrom {
            get; set;
        }
        [Column("ORIGINALQTY")]
        public System.Nullable<double> OriginalQty {
            get; set;
        }
        public virtual Container Parent {
            get; set;
        }
        public virtual Owner Owner {
            get; set;
        }
        public virtual UOM UOM {
            get; set;
        }
        [Column("QTY")]
        public System.Nullable<double> Qty {
            get; set;
        }
        [Column("CONTAINERID")]
        [Key()]
        public string InstanceID {
            get; set;
        }
        public virtual HoldReason HoldReason {
            get; set;
        }
        public virtual CurrentStatus CurrentStatus {
            get; set;
        }
        [Column("CHANGECOUNT")]
        public System.Nullable<int> ChangeCount {
            get; set;
        }
        public virtual Container IssuedToContainer {
            get; set;
        }
        [Column("ONHOLDDATE")]
        public System.Nullable<System.DateTime> OnHoldDate {
            get; set;
        }
        [Column("CURRENTHOLDCOUNT")]
        public System.Nullable<int> CurrentHoldCount {
            get; set;
        }
        [Column("CDOTYPEID")]
        public System.Nullable<int> CDOTypeId {
            get; set;
        }
        [Column("EXPIRATIONDATE")]
        public System.Nullable<System.DateTime> ExpirationDate {
            get; set;
        }
        public virtual Container StartParentContainer {
            get; set;
        }
        [Column("DESCRIPTION")]
        public string Description {
            get; set;
        }
        public virtual MfgLine MfgLine {
            get; set;
        }
        public virtual ICollection<UserAttribute> Attributes { get; set; }
    }
}
